version: 2.1

orbs:
  cypress: cypress-io/cypress@1.27.0
  mac: circleci/macos@1.1.0
  node: circleci/node@4.2.1
  win: circleci/windows@2.4.0

executors:
  linux:
    docker:
      - image: circleci/buildpack-deps:trusty
        user: root
  macos:
    macos:
      xcode: 11.4
  win/default:
    shell: powershell.exe

anchors:
  - &workspace_root ~/

  - &attach_workspace
    attach_workspace:
      at: *workspace_root

  - &npm_cache_key package-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}

  - &os_param
    parameters:
      os:
        type: string

  - &matrix_params
    matrix:
      parameters:
        os: [ 'linux', 'macos', 'win/default' ]

commands:
  build_install_cli-linux-macos:
    steps:
      - node/install:
          lts: true
      - run:
          name: Install CLI dependencies
          command: cd packages/cli && npm install
      - run:
          name: Build CLI
          command: cd packages/cli && npm run build
      - run:
          name: Install CLI
          command: cd packages/cli && npm install -g

  build_install_cli-win:
    steps:
      - run:
          name: Install CLI dependencies
          shell: bash.exe
          command: cd packages/cli && npm install
      - run:
          name: Build CLI
          shell: bash.exe
          command: cd packages/cli && npm run build
      - run:
          name: Install CLI
          shell: bash.exe
          command: cd packages/cli && npm install -g

  install_deps-linux:
    steps:
      - run:
          name: Install External Dependencies
          command: |
            chmod +x install-deps/linux.sh
            install-deps/linux.sh

  install_deps-macos:
    steps:
      - run:
          name: Install External Dependencies
          command: |
            chmod +x install-deps/macos.sh
            install-deps/macos.sh

  install_deps-win:
    steps:
      - run:
          name: Install External Dependencies
          command: .\install-deps\win.ps1

  test-linux-macos:
    steps:
      - run:
          name: Add test report directory
          command: mkdir -p test-results
      - run:
          name: Run Quire Commands Test
          command: cd packages/cli && npm run test cli.test.js
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  test-win:
    steps:
      - run:
          name: Add test report directory
          shell: bash.exe
          command: mkdir -p ~/test-results
      - run:
          name: Run Quire Commands Test
          shell: bash.exe
          command: cd packages/cli && npm run test cli.test.js
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

jobs:
  install_build_test:
    <<: *os_param
    executor: << parameters.os >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - *npm_cache_key
      - when:
          condition:
            equal: [ 'win/default', << parameters.os >>]
          steps:
            - build_install_cli-win
            - install_deps-win
            - test-win
      - when:
          condition:
            equal: [ 'linux', << parameters.os >>]
          steps:
            - build_install_cli-linux-macos
            - install_deps-linux
            - test-linux-macos
      - when:
          condition:
            equal: [ 'macos', << parameters.os >>]
          steps:
            - build_install_cli-linux-macos
            - install_deps-macos
            - test-linux-macos
      - save_cache:
          key: *npm_cache_key
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache

workflows:
  install_build_test:
    jobs:
      - install_build_test:
          <<: *matrix_params
          name: install_build_test-<< matrix.os >>
